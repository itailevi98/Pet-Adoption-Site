{"ast":null,"code":"var _jsxFileName = \"/Users/itailevi/Documents/ITC/Pet Adoption Site/client/src/components/Admin/AdminDashboard/UserDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nimport { getPetById } from \"../../../lib/petsApi\";\nimport { changeUserRole, getFullUserById } from \"../../../lib/userApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserDetails(props) {\n  _s();\n\n  const [user, setUser] = useState();\n  const [userPets, setUserPets] = useState([]);\n  const {\n    userId\n  } = props;\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  async function handleOnClick() {\n    if (user.role === \"user\") await changeUserRole(user.id, \"admin\");else await changeUserRole(user.id, \"user\");\n    history.go(0);\n  }\n\n  useEffect(() => {\n    async function fetchFullUserDetails(userId) {\n      try {\n        const {\n          user,\n          userPets\n        } = await getFullUserById(userId);\n        setUser(user);\n\n        if (userPets) {\n          const fetchedPets = [];\n\n          for (const petId of userPets) {\n            const id = petId.pet_id;\n            const pet = await getPetById(id);\n            fetchedPets.push(pet);\n          }\n\n          setUserPets(fetchedPets);\n        }\n      } catch (err) {\n        setError(true);\n      }\n    }\n\n    if (userId) {\n      fetchFullUserDetails(userId);\n    }\n  }, [userId]);\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [error && \"Error getting information from server.\", !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group list-group-flush\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Name: \", user.first_name, \" \", user.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Phone #: \", user.phone_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Bio: \", user.bio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Role: \", user.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"Created Date: \", user.created_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-3\",\n        children: \"User Owned Pets: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), userPets.length === 0 && \"User does not own any pets\", userPets.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: userPets.map(pet => {\n          const petLink = `/pets/${pet.pet_id}`;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: petLink,\n            className: \"list-group-item\",\n            children: [\"Pet ID: \", pet.pet_id, \", Name: \", pet.name, \" \"]\n          }, pet.pet_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOnClick(),\n        className: \"btn btn-primary mt-3\",\n        children: [user.role === \"user\" && \"Make Admin\", user.role === \"admin\" && \"Make User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserDetails, \"pDkrgOm+h8VTeIehbzjt8UmeSMs=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserDetails;\nexport default _c2 = withRouter(UserDetails);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserDetails\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/itailevi/Documents/ITC/Pet Adoption Site/client/src/components/Admin/AdminDashboard/UserDetails.jsx"],"names":["useEffect","useState","Link","useHistory","withRouter","getPetById","changeUserRole","getFullUserById","UserDetails","props","user","setUser","userPets","setUserPets","userId","error","setError","history","handleOnClick","role","id","go","fetchFullUserDetails","fetchedPets","petId","pet_id","pet","push","err","first_name","last_name","email","phone_number","bio","created_date","length","map","petLink","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\nimport { getPetById } from \"../../../lib/petsApi\";\nimport { changeUserRole, getFullUserById } from \"../../../lib/userApi\";\n\nfunction UserDetails(props) {\n    const [user, setUser] = useState();\n    const [userPets, setUserPets] = useState([]);\n    const { userId } = props;\n    const [error, setError] = useState(false);\n    const history = useHistory();\n\n    async function handleOnClick() {\n        if (user.role === \"user\") await changeUserRole(user.id, \"admin\");\n        else await changeUserRole(user.id, \"user\");\n        history.go(0);\n    }\n\n    useEffect(() => {\n        async function fetchFullUserDetails(userId) {\n            try {\n                const { user, userPets } = await getFullUserById(userId);\n                setUser(user);\n                if (userPets) {\n                    const fetchedPets = [];\n                    for (const petId of userPets) {\n                        const id = petId.pet_id;\n                        const pet = await getPetById(id);\n                        fetchedPets.push(pet);\n                    }\n                    setUserPets(fetchedPets);\n                }\n            } catch (err) {\n                setError(true);\n            }\n        }\n\n        if (userId) {\n            fetchFullUserDetails(userId);\n        }\n    }, [userId]);\n\n    if (!user) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"text-center\">\n            {error && \"Error getting information from server.\"}\n            {!error && <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">Name: {user.first_name} {user.last_name}</li>\n                <li className=\"list-group-item\">Email: {user.email}</li>\n                <li className=\"list-group-item\">Phone #: {user.phone_number}</li>\n                <li className=\"list-group-item\">Bio: {user.bio}</li>\n                <li className=\"list-group-item\">Role: {user.role}</li>\n                <li className=\"list-group-item\">Created Date: {user.created_date}</li>\n                <h3 className=\"mt-3\">User Owned Pets: </h3>\n                {userPets.length === 0 && \"User does not own any pets\"}\n                {userPets.length > 0 && <ul className=\"list-group\">\n                    {userPets.map((pet) => {\n                        const petLink = `/pets/${pet.pet_id}`;\n                        return <Link to={petLink} key={pet.pet_id} className=\"list-group-item\">Pet ID: {pet.pet_id}, Name: {pet.name} </Link>\n                    })}\n                </ul>}\n                <button onClick={() => handleOnClick()} className=\"btn btn-primary mt-3\">\n                    {user.role === \"user\" && \"Make Admin\"}\n                    {user.role === \"admin\" && \"Make User\"}\n                </button>\n            </ul>}\n        </div>\n    );\n}\n\nexport default withRouter(UserDetails);\n"]},"metadata":{},"sourceType":"module"}