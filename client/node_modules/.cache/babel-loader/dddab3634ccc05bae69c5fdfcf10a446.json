{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../configs/constants\";\nconst BaseUrl = config.API_URL;\n\nfunction getAuthConfig(token) {\n  return {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  };\n}\n\nexport async function searchPets(query) {\n  const response = await axios.get(`${BaseUrl}/pet`, {\n    params: query\n  });\n  return response.data.results;\n}\nexport async function getPetById(id) {\n  const response = await axios.get(`${BaseUrl}/pet/${id}`);\n  return response.data.pet;\n}\nexport async function savePet(petId, token) {\n  const response = await axios.post(`${BaseUrl}/pet/${petId}/save`, token, getAuthConfig(token));\n  return response.data;\n}\nexport async function deleteSavedPet(petId, token) {\n  const response = await axios.delete(`${BaseUrl}/pet/${petId}/save`, getAuthConfig(token));\n  return response.data;\n}\nexport async function adoptPet(petId, statusType, token) {\n  const response = await axios.post(`${BaseUrl}/pet/${petId}/adopt`, {\n    statusType: statusType\n  }, getAuthConfig(token));\n  return response.data;\n}\nexport async function returnPet(petId, token) {\n  const response = await axios.post(`${BaseUrl}/pet/${petId}/return`, token, getAuthConfig(token));\n  return response.data;\n}\nexport async function addPet(formData, token) {\n  const response = await axios.post(`${BaseUrl}/pet`, formData, getAuthConfig(token));\n  return response.data.pet;\n}\nexport async function editPet(formData, petId) {\n  const response = await axios.put(`${BaseUrl}/pet/${petId}`, formData);\n  return response.data;\n}","map":{"version":3,"sources":["/Users/itailevi/Documents/ITC/Pet Adoption Site/client/src/lib/petsApi.js"],"names":["axios","config","BaseUrl","API_URL","getAuthConfig","token","headers","Authorization","searchPets","query","response","get","params","data","results","getPetById","id","pet","savePet","petId","post","deleteSavedPet","delete","adoptPet","statusType","returnPet","addPet","formData","editPet","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAGA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,YAAYF;AADtB;AADN,GAAP;AAKH;;AAED,OAAO,eAAeG,UAAf,CAA0BC,KAA1B,EAAiC;AACpC,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAET,OAAQ,MAArB,EAA4B;AAC/CU,IAAAA,MAAM,EAAEH;AADuC,GAA5B,CAAvB;AAGA,SAAOC,QAAQ,CAACG,IAAT,CAAcC,OAArB;AACH;AAED,OAAO,eAAeC,UAAf,CAA0BC,EAA1B,EAA8B;AACjC,QAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAET,OAAQ,QAAOc,EAAG,EAA/B,CAAvB;AACA,SAAON,QAAQ,CAACG,IAAT,CAAcI,GAArB;AACH;AAED,OAAO,eAAeC,OAAf,CAAuBC,KAAvB,EAA8Bd,KAA9B,EAAqC;AACxC,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAY,GAAElB,OAAQ,QAAOiB,KAAM,OAAnC,EAA2Cd,KAA3C,EAAkDD,aAAa,CAACC,KAAD,CAA/D,CAAvB;AACA,SAAOK,QAAQ,CAACG,IAAhB;AACH;AAED,OAAO,eAAeQ,cAAf,CAA8BF,KAA9B,EAAqCd,KAArC,EAA4C;AAC/C,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACsB,MAAN,CAAc,GAAEpB,OAAQ,QAAOiB,KAAM,OAArC,EAA6Cf,aAAa,CAACC,KAAD,CAA1D,CAAvB;AACA,SAAOK,QAAQ,CAACG,IAAhB;AACH;AAED,OAAO,eAAeU,QAAf,CAAwBJ,KAAxB,EAA+BK,UAA/B,EAA2CnB,KAA3C,EAAkD;AACrD,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAY,GAAElB,OAAQ,QAAOiB,KAAM,QAAnC,EAA4C;AAAEK,IAAAA,UAAU,EAAEA;AAAd,GAA5C,EAAwEpB,aAAa,CAACC,KAAD,CAArF,CAAvB;AACA,SAAOK,QAAQ,CAACG,IAAhB;AACH;AAED,OAAO,eAAeY,SAAf,CAAyBN,KAAzB,EAAgCd,KAAhC,EAAuC;AAC1C,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAY,GAAElB,OAAQ,QAAOiB,KAAM,SAAnC,EAA6Cd,KAA7C,EAAoDD,aAAa,CAACC,KAAD,CAAjE,CAAvB;AACA,SAAOK,QAAQ,CAACG,IAAhB;AACH;AAED,OAAO,eAAea,MAAf,CAAsBC,QAAtB,EAAgCtB,KAAhC,EAAuC;AAC1C,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACoB,IAAN,CAAY,GAAElB,OAAQ,MAAtB,EAA6ByB,QAA7B,EAAuCvB,aAAa,CAACC,KAAD,CAApD,CAAvB;AACA,SAAOK,QAAQ,CAACG,IAAT,CAAcI,GAArB;AACH;AAED,OAAO,eAAeW,OAAf,CAAuBD,QAAvB,EAAiCR,KAAjC,EAAwC;AAC3C,QAAMT,QAAQ,GAAG,MAAMV,KAAK,CAAC6B,GAAN,CAAW,GAAE3B,OAAQ,QAAOiB,KAAM,EAAlC,EAAqCQ,QAArC,CAAvB;AACA,SAAOjB,QAAQ,CAACG,IAAhB;AACH","sourcesContent":["import axios from \"axios\";\nimport { config } from \"../configs/constants\";\n\n\nconst BaseUrl = config.API_URL;\n\nfunction getAuthConfig(token) {\n    return {\n        headers: {\n            Authorization: 'Bearer ' + token,\n        }\n    };\n}\n\nexport async function searchPets(query) {\n    const response = await axios.get(`${BaseUrl}/pet`, { \n        params: query\n    });\n    return response.data.results;\n}\n\nexport async function getPetById(id) {\n    const response = await axios.get(`${BaseUrl}/pet/${id}`);\n    return response.data.pet;\n}\n\nexport async function savePet(petId, token) {\n    const response = await axios.post(`${BaseUrl}/pet/${petId}/save`, token, getAuthConfig(token));\n    return response.data;\n}\n\nexport async function deleteSavedPet(petId, token) {\n    const response = await axios.delete(`${BaseUrl}/pet/${petId}/save`, getAuthConfig(token));\n    return response.data;\n}\n\nexport async function adoptPet(petId, statusType, token) {\n    const response = await axios.post(`${BaseUrl}/pet/${petId}/adopt`, { statusType: statusType }, getAuthConfig(token));\n    return response.data;\n}\n\nexport async function returnPet(petId, token) {\n    const response = await axios.post(`${BaseUrl}/pet/${petId}/return`, token, getAuthConfig(token));\n    return response.data;\n}\n\nexport async function addPet(formData, token) {\n    const response = await axios.post(`${BaseUrl}/pet`, formData, getAuthConfig(token));\n    return response.data.pet;\n}\n\nexport async function editPet(formData, petId) {\n    const response = await axios.put(`${BaseUrl}/pet/${petId}`, formData);\n    return response.data;\n}\n\n"]},"metadata":{},"sourceType":"module"}