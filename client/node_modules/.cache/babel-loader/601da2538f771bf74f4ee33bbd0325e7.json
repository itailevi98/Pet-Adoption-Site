{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../configs/constants\";\nconst BaseUrl = config.API_URL;\n\nfunction getAuthConfig(token) {\n  return {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  };\n}\n\nexport async function createUser(newUser) {\n  const response = await axios.post(`${BaseUrl}/signup`, newUser);\n  return response.data.user;\n}\nexport async function userLogin(email, password) {\n  const response = await axios.post(`${BaseUrl}/login`, {\n    email,\n    password\n  });\n  return response.data.token;\n}\nexport async function getUserById(token) {\n  const response = await axios.get(`${BaseUrl}/user/${token}`, getAuthConfig(token));\n  return response.data.user;\n}\nexport async function updateUser(user, token) {\n  const response = await axios.put(`${BaseUrl}/user/${token}`, user, getAuthConfig(token));\n  return response.data.user;\n}\nexport async function getUsers() {\n  const response = await axios.get(`${BaseUrl}/user`);\n  return response.data.users;\n}\nexport async function getFullUserById(id) {\n  const response = await axios.get(`${BaseUrl}/user/${id}/full`);\n  return response.data;\n}\nexport async function changeUserRole(userId, newRole) {\n  const response = await axios.put(`${BaseUrl}/user/${userId}/role`, {\n    newRole: newRole\n  });\n  return response.data;\n}","map":{"version":3,"sources":["/Users/itailevi/Documents/ITC/Pet Adoption Site/client/src/lib/userApi.js"],"names":["axios","config","BaseUrl","API_URL","getAuthConfig","token","headers","Authorization","createUser","newUser","response","post","data","user","userLogin","email","password","getUserById","get","updateUser","put","getUsers","users","getFullUserById","id","changeUserRole","userId","newRole"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAGA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,YAAYF;AADtB;AADN,GAAP;AAKH;;AAED,OAAO,eAAeG,UAAf,CAA0BC,OAA1B,EAAmC;AACtC,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAY,GAAET,OAAQ,SAAtB,EAAgCO,OAAhC,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAT,CAAcC,IAArB;AACH;AAED,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AAC7C,QAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAY,GAAET,OAAQ,QAAtB,EAA+B;AAAEa,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA/B,CAAvB;AACA,SAAON,QAAQ,CAACE,IAAT,CAAcP,KAArB;AACH;AAED,OAAO,eAAeY,WAAf,CAA2BZ,KAA3B,EAAkC;AACrC,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACkB,GAAN,CAAW,GAAEhB,OAAQ,SAAQG,KAAM,EAAnC,EAAsCD,aAAa,CAACC,KAAD,CAAnD,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAT,CAAcC,IAArB;AACH;AAED,OAAO,eAAeM,UAAf,CAA0BN,IAA1B,EAAgCR,KAAhC,EAAuC;AAC1C,QAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAClB,GAAElB,OAAQ,SAAQG,KAAM,EADN,EAEnBQ,IAFmB,EAGnBT,aAAa,CAACC,KAAD,CAHM,CAAvB;AAKA,SAAOK,QAAQ,CAACE,IAAT,CAAcC,IAArB;AACH;AAED,OAAO,eAAeQ,QAAf,GAA0B;AAC7B,QAAMX,QAAQ,GAAG,MAAMV,KAAK,CAACkB,GAAN,CAAW,GAAEhB,OAAQ,OAArB,CAAvB;AACA,SAAOQ,QAAQ,CAACE,IAAT,CAAcU,KAArB;AACH;AAED,OAAO,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC;AACtC,QAAMd,QAAQ,GAAG,MAAMV,KAAK,CAACkB,GAAN,CAAW,GAAEhB,OAAQ,SAAQsB,EAAG,OAAhC,CAAvB;AACA,SAAOd,QAAQ,CAACE,IAAhB;AACH;AAED,OAAO,eAAea,cAAf,CAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;AAClD,QAAMjB,QAAQ,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAW,GAAElB,OAAQ,SAAQwB,MAAO,OAApC,EAA4C;AAACC,IAAAA,OAAO,EAAEA;AAAV,GAA5C,CAAvB;AACA,SAAOjB,QAAQ,CAACE,IAAhB;AACH","sourcesContent":["import axios from \"axios\";\nimport { config } from \"../configs/constants\";\n\n\nconst BaseUrl = config.API_URL;\n\nfunction getAuthConfig(token) {\n    return {\n        headers: {\n            Authorization: 'Bearer ' + token,\n        }\n    };\n}\n\nexport async function createUser(newUser) {\n    const response = await axios.post(`${BaseUrl}/signup`, newUser);\n    return response.data.user;\n}\n\nexport async function userLogin(email, password) {\n    const response = await axios.post(`${BaseUrl}/login`, { email, password });\n    return response.data.token;\n}\n\nexport async function getUserById(token) {\n    const response = await axios.get(`${BaseUrl}/user/${token}`, getAuthConfig(token));\n    return response.data.user;\n}\n\nexport async function updateUser(user, token) {\n    const response = await axios.put(\n        `${BaseUrl}/user/${token}`, \n        user,\n        getAuthConfig(token)\n    );\n    return response.data.user;\n}\n\nexport async function getUsers() {\n    const response = await axios.get(`${BaseUrl}/user`);\n    return response.data.users;\n}\n\nexport async function getFullUserById(id) {\n    const response = await axios.get(`${BaseUrl}/user/${id}/full`);\n    return response.data;\n}\n\nexport async function changeUserRole(userId, newRole) {\n    const response = await axios.put(`${BaseUrl}/user/${userId}/role`, {newRole: newRole });\n    return response.data;\n}\n"]},"metadata":{},"sourceType":"module"}